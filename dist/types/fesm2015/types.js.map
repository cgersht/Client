{"version":3,"file":"types.js","sources":["ng://types/lib/types.service.ts","ng://types/lib/types.component.ts","ng://types/lib/types.module.ts","ng://types/lib/model/http-request.model.ts","ng://types/lib/model/customer.ts","ng://types/lib/model/ip-config.ts","ng://types/lib/model/column.ts","ng://types/lib/model/settings.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TypesService {\r\n\r\n  constructor() { }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'lib-types',\r\n  template: `\r\n    <p>\r\n      types works!\r\n    </p>\r\n  `,\r\n  styles: []\r\n})\r\nexport class TypesComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { TypesComponent } from './types.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [TypesComponent],\r\n  imports: [\r\n  ],\r\n  exports: [TypesComponent]\r\n})\r\nexport class TypesModule { }\r\n","import { HttpHeaders } from '@angular/common/http';\r\n\r\nexport class HttpRequestModel {\r\n  component: string;\r\n  logMessage: string;\r\n  url: string;\r\n  action: string;\r\n  params: object = {};\r\n  body: any = {};\r\n  isText: boolean;\r\n  headers: HttpHeaders;\r\n\r\n  constructor(copy?: Partial<HttpRequestModel>) {\r\n    Object.assign(this, copy);\r\n\r\n    this.params = Object.entries(this.params)\r\n      .filter(([, val]) => val !== null)\r\n      .filter(([, val]) => val !== undefined)\r\n      .reduce((state, [key, val]) => ({ ...state, [key]: val }), {});\r\n\r\n    if (Array.isArray(this.body)) { return; }\r\n\r\n    this.body = Object.entries(this.body)\r\n      .filter(([, val]) => val !== null)\r\n      .filter(([, val]) => val !== undefined)\r\n      .reduce((state, [key, val]) => ({\r\n        ...state, [key]: val\r\n      }), {});\r\n\r\n    this.body = Object.keys(this.body).length ? this.body : null;\r\n  }\r\n\r\n  get queryParams() {\r\n\r\n    const result = this._queryParams(this.params);\r\n\r\n    return /&/.test(result) ? `?${result}` : '';\r\n  }\r\n\r\n  private _queryParams(params: object, prefix: string = ''): string {\r\n    const result = Object.entries(params)\r\n      .filter(([, value]) => typeof (value) !== 'object')\r\n      .map(([key, value]) => `${prefix}${key}=${decodeURIComponent(value)}`)\r\n      .join('&');\r\n\r\n    return Object.entries(params)\r\n      .filter(([, value]) => typeof (value) === 'object')\r\n      .map(([key, value]) => this._queryParams(value, `${key}.`))\r\n      .concat(result)\r\n      .join('&');\r\n  }\r\n\r\n  get fullUrl() { return `${this.url}${this.action}`; }\r\n\r\n  get fullParams() {\r\n    return this.params;\r\n  }\r\n}\r\n","export interface Customer {\r\n CustomerID: Number ;\r\n CustomerName: String ;\r\n DBName: String ;\r\n remarks?: any ;\r\n Modules: String ;\r\n VersionID?: Number ;\r\n LastBackupPath: String ;\r\n SiteName: String;\r\n UppgradeStatus?: any ;\r\n IsBackup: Boolean ;\r\n PermittedIps?: String ;\r\n PrevVersitionId?: any ;\r\n DependByDepartments?: Boolean ;\r\n}\r\n","export interface IpConfig {\r\n    servicePath?: string;\r\n}\r\n","export interface Column {\r\n    header: string;\r\n    name: string;\r\n}\r\n","export interface Setting{\r\n    companyName?: string;\r\n}\r\n"],"names":[],"mappings":"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"}