import * as tslib_1 from "tslib";
import { Pipe } from '@angular/core';
import { timeFormats } from 'types';
let TimeSpanPipe = class TimeSpanPipe {
    transform(value, format) {
        const numVal = parseInt(value, 10);
        if (!numVal && numVal !== 0) {
            return value;
        }
        const seconds = Math.floor((numVal / 1000) % 60);
        const minutes = Math.floor((numVal / (1000 * 60)) % 60);
        const hours = Math.floor((numVal / (1000 * 60 * 60)));
        const hoursText = hours < 10 ? '0' + hours : hours;
        const minutesText = minutes < 10 ? '0' + minutes : minutes;
        const secondsText = seconds < 10 ? '0' + seconds : seconds;
        if (format === timeFormats.HHmm) {
            return `${hoursText}:${minutesText}`;
        }
        else {
            return `${hoursText}:${minutesText}:${secondsText}`;
        }
    }
};
TimeSpanPipe = tslib_1.__decorate([
    Pipe({ name: 'timeSpan' })
], TimeSpanPipe);
export { TimeSpanPipe };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGltZS1zcGFuLnBpcGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9jb3JlLyIsInNvdXJjZXMiOlsibGliL3BpcGVzL3RpbWUtc3Bhbi5waXBlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsSUFBSSxFQUFpQixNQUFNLGVBQWUsQ0FBQztBQUNwRCxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sT0FBTyxDQUFDO0FBR3BDLElBQWEsWUFBWSxHQUF6QixNQUFhLFlBQVk7SUFFdkIsU0FBUyxDQUFDLEtBQVUsRUFBRSxNQUFvQjtRQUN4QyxNQUFNLE1BQU0sR0FBRyxRQUFRLENBQUMsS0FBSyxFQUFFLEVBQUUsQ0FBQyxDQUFDO1FBQ25DLElBQUksQ0FBQyxNQUFNLElBQUksTUFBTSxLQUFLLENBQUMsRUFBRTtZQUFFLE9BQU8sS0FBSyxDQUFDO1NBQUU7UUFDOUMsTUFBTSxPQUFPLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUMsR0FBRyxFQUFFLENBQUMsQ0FBQztRQUNqRCxNQUFNLE9BQU8sR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsTUFBTSxHQUFHLENBQUMsSUFBSSxHQUFHLEVBQUUsQ0FBQyxDQUFDLEdBQUcsRUFBRSxDQUFDLENBQUM7UUFDeEQsTUFBTSxLQUFLLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLE1BQU0sR0FBRyxDQUFDLElBQUksR0FBRyxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBRXRELE1BQU0sU0FBUyxHQUFHLEtBQUssR0FBRyxFQUFFLENBQUMsQ0FBQyxDQUFDLEdBQUcsR0FBRyxLQUFLLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQztRQUNuRCxNQUFNLFdBQVcsR0FBRyxPQUFPLEdBQUcsRUFBRSxDQUFDLENBQUMsQ0FBQyxHQUFHLEdBQUcsT0FBTyxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUM7UUFDM0QsTUFBTSxXQUFXLEdBQUcsT0FBTyxHQUFHLEVBQUUsQ0FBQyxDQUFDLENBQUMsR0FBRyxHQUFHLE9BQU8sQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDO1FBRTNELElBQUksTUFBTSxLQUFLLFdBQVcsQ0FBQyxJQUFJLEVBQUU7WUFBRSxPQUFPLEdBQUcsU0FBUyxJQUFJLFdBQVcsRUFBRSxDQUFBO1NBQUU7YUFDcEU7WUFBRSxPQUFPLEdBQUcsU0FBUyxJQUFJLFdBQVcsSUFBSSxXQUFXLEVBQUUsQ0FBQTtTQUFFO0lBQzlELENBQUM7Q0FDRixDQUFBO0FBaEJZLFlBQVk7SUFEeEIsSUFBSSxDQUFDLEVBQUUsSUFBSSxFQUFFLFVBQVUsRUFBRSxDQUFDO0dBQ2QsWUFBWSxDQWdCeEI7U0FoQlksWUFBWSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBpcGUsIFBpcGVUcmFuc2Zvcm0gfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IHRpbWVGb3JtYXRzIH0gZnJvbSAndHlwZXMnO1xuXG5AUGlwZSh7IG5hbWU6ICd0aW1lU3BhbicgfSlcbmV4cG9ydCBjbGFzcyBUaW1lU3BhblBpcGUgaW1wbGVtZW50cyBQaXBlVHJhbnNmb3JtIHtcblxuICB0cmFuc2Zvcm0odmFsdWU6IGFueSwgZm9ybWF0PzogdGltZUZvcm1hdHMpOiBhbnkge1xuICAgIGNvbnN0IG51bVZhbCA9IHBhcnNlSW50KHZhbHVlLCAxMCk7XG4gICAgaWYgKCFudW1WYWwgJiYgbnVtVmFsICE9PSAwKSB7IHJldHVybiB2YWx1ZTsgfVxuICAgIGNvbnN0IHNlY29uZHMgPSBNYXRoLmZsb29yKChudW1WYWwgLyAxMDAwKSAlIDYwKTtcbiAgICBjb25zdCBtaW51dGVzID0gTWF0aC5mbG9vcigobnVtVmFsIC8gKDEwMDAgKiA2MCkpICUgNjApO1xuICAgIGNvbnN0IGhvdXJzID0gTWF0aC5mbG9vcigobnVtVmFsIC8gKDEwMDAgKiA2MCAqIDYwKSkpO1xuXG4gICAgY29uc3QgaG91cnNUZXh0ID0gaG91cnMgPCAxMCA/ICcwJyArIGhvdXJzIDogaG91cnM7XG4gICAgY29uc3QgbWludXRlc1RleHQgPSBtaW51dGVzIDwgMTAgPyAnMCcgKyBtaW51dGVzIDogbWludXRlcztcbiAgICBjb25zdCBzZWNvbmRzVGV4dCA9IHNlY29uZHMgPCAxMCA/ICcwJyArIHNlY29uZHMgOiBzZWNvbmRzO1xuXG4gICAgaWYgKGZvcm1hdCA9PT0gdGltZUZvcm1hdHMuSEhtbSkgeyByZXR1cm4gYCR7aG91cnNUZXh0fToke21pbnV0ZXNUZXh0fWAgfVxuICAgIGVsc2UgeyByZXR1cm4gYCR7aG91cnNUZXh0fToke21pbnV0ZXNUZXh0fToke3NlY29uZHNUZXh0fWAgfVxuICB9XG59XG4iXX0=